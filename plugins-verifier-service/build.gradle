buildscript {

  ext.kotlin_version = '1.2.41'

  repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.3'

    /**
     * Gradle plugin that adds a 'taskTree' task that prints task dependency tree report to the console.
     * The task dependency tree is printed with a similar format to that of the built-in dependencies task.
     * https://github.com/dorongold/gradle-task-tree
     */
    classpath "gradle.plugin.com.dorongold.plugins:task-tree:1.3"
  }
}

def serviceVersion = project.hasProperty('verifierServiceProjectVersion') ? project.verifierServiceProjectVersion : '1.0'

configure(allprojects) {
  version = serviceVersion
  group = "org.jetbrains.intellij.plugins.verifier"

  apply plugin: "war"
  apply plugin: 'kotlin'
  apply plugin: 'idea'
  apply plugin: 'java'
  apply plugin: 'com.google.protobuf'
  apply plugin: "com.dorongold.task-tree"

  idea {
    module {
      inheritOutputDirs = false
      outputDir = file("$buildDir/classes/main")
    }
  }

  war {
    manifest {
      attributes 'Plugin-Verifier-Service-Version': version
    }
  }

  protobuf {

    generatedFilesBaseDir = "$projectDir/src/generated"

    protoc {
      artifact = 'com.google.protobuf:protoc:3.4.0'
    }
  }

  def protobufJavaGeneratedDir = "${protobuf.generatedFilesBaseDir}/main/java"

  clean {
    delete protobuf.generatedFilesBaseDir
  }

  idea {
    module {
      generatedSourceDirs += file(protobufJavaGeneratedDir)
    }
  }

  sourceSets {
    main {
      java {
        srcDirs protobufJavaGeneratedDir
      }
      kotlin {
        srcDirs protobufJavaGeneratedDir
      }
    }
  }

  repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://dl.bintray.com/jetbrains/intellij-plugin-service" }
    maven { url "https://www.jetbrains.com/intellij-repository/releases" }
    maven { url "https://jetbrains.bintray.com/intellij-third-party-dependencies" }
  }

  dependencies {
    testCompile 'junit:junit:4.12'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile 'com.github.salomonbrys.kotson:kotson:2.4.0'
    compile 'com.google.code.gson:gson:2.7'

    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.3.1'

    //Simple map-database engine that allows to store maps on disk: https://github.com/jankotek/mapdb/
    compile 'org.mapdb:mapdb:3.0.5'

    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.24'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7'
    runtime "org.codehaus.groovy:groovy:2.4.12"
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'

    compile "commons-fileupload:commons-fileupload:1.3.1"

    compile group: 'org.jetbrains.intellij.plugins', name: 'intellij-feature-extractor', version: 'dev'
    compile group: 'org.jetbrains.intellij.plugins', name: 'verifier-core', version: 'dev'

    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.4.0'
  }

}

apply plugin: 'maven-publish'

publishToMavenLocal.dependsOn test

//Tasks defined in plugins are added after all projects are evaluated
//We have to hook after the evaluation to prevent an evaluation failure
project.afterEvaluate {
  compileJava.dependsOn generateProto
  compileKotlin.dependsOn generateProto
}
